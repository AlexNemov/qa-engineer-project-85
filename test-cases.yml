---
- summary: |
    Успешная авторизация
  requirement: |
    При верном вводе почты и пароля пользователь авторизуется на сайте
  prerequisites: |
    Открыта страница авторизации (на главной странице нажимаем в
    шапке справа «Sign In»)
  test-data: |
    email = testmail@test.ru, password = 123456
  steps:
    - Вводим email
    - Вводим password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Переход на главную страницу, где отображается информация об
    авторизованном пользователе
    
- summary: |
    Проверка входа пользователя с неверным паролем
  requirement: |
    При попытке авторизоваться с правильной почтой и неверным паролем
    получаем сообщение об ошибке
  prerequisites: Открыта страница авторизации
  test-data: |
    email = testmail@test.ru
  steps:
    - Вводим email
    - Вводим неверный пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Появляется сообщение об ошибке «INVALID_PASSWORD»
    
- summary: |
    Проверка входа пользователя с неверной почтой
  requirement: |
    При попытке авторизоваться с неправильной почтой получаем сообщение об ошибке
  prerequisites: Открыта страница авторизации
  test-data: |
    Данные отсутствуют
  steps:
    - Вводим любой email
    - Вводим любой  пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Появляется  сообщение об ошибке «EMAIL_NOT_FOUND»
    
- summary: |
    Успешная авторизация через Github
  requirement: |
    Пользователь может авторизоваться на сайте через аккаунт на Github
  prerequisites: |
    - Открыта страница авторизации или страница регистрации 
    - Пользователь авторизован на Github 
  test-data: |
    Данные отсутствуют 
  steps:
    - Нажимаем «Sign in with Github»
  expected-result: 
    Переход на главную страницу, где отображается информация об
    авторизованном пользователе
    
- summary: |
    Изменение пароля через почту
  requirement: |
    Пользователь может изменить пароль  электронную почту
  prerequisites: |
    - У пользователя есть доступ к своей электронной почте, связанной
      с аккаунтом
    - Открыта страница авторизации 
  test-data: |
    Данные отсутствуют 
  steps:
    - Нажимаем «Forgot your password?»
    - На электронную почту, связанную с аккаунтом приходит письмо под заголовком
      «Reset your password for Codebattle»
    - Переходим по ссылке, содержащейся в письме
    - В появившемся окне «Reset your password» вводим в поле новый пароль
    - Нажимаем «SAVE»
  expected-result: Появляется сообщение «Password changed»
  
- summary: |
    Успешная регистрация
  requirement: |
    При вводе корректных данных в соответствующие поля пользователь
    зарегистрируется на сайте
  prerequisites: |
    Открыта страница регистрации 
  test-data: |
    Данные отсутствуют 
  steps:
    - Вводим в поле «Nickname» любое имя длиной от 3 до 16 символов, содержащее
      только цифры, символы нижнего подчеркивания и буквы латинского алфавита и
      начинающееся с буквы
    - Вводим в поле «Email» корректный адрес электронной почты
    - Вводим в поля «Password» и «Password Confirmation» пароль от 6 до 16
      символов
    - Нажимаем «Submit»
  expected-result: |
    Открывается главная страница с авторизацией в новом
    зарегистрированном профиле
    
- summary: |
    Регистрация с незаполненными полями
  requirement: |
    Если при регистрации оставить одно или несколько полей пустыми, то
    они станут подсвечены красным
  prerequisites: |
    Открыта страница регистрации 
  test-data: |
    Данные отсутствуют 
  steps:
    - Оставляем поля не заполненными и нажимаем «Submit»
  expected-result: |
    Все пустые поля подсвечиваются красным
    
- summary: |
    Проверка на допустимый Nickname
  requirement: |
    Поле «Nickname» выделяется красным и выдается сообщение о не
    допустимости вводимого имени, если оно не соответствует требованиям (от 3 до
    16 символов, начинается на букву, не содержит пробел в начале или конце,
    содержит только латинские буквы, цифры, подчеркивание)
  prerequisites: |
    Открыта страница регистрации 
  test-data: |
    « nick1 », «ab», «thisnicknameistoolong», «Nick@», «2nick»
  steps:
    - Вводим в поле  «Nickname» одно из значений
    - Нажимаем Enter
  expected-result: |
    Под полем «Nickname» появляется сообщение с критерием, по
    которому имя не подходит
    
- summary: |
    Ошибочный формат электронной почты при регистрации
  requirement: |
    Если при регистрации ввести в поле «Email» адрес, не соответствующий формату
    электронной почты, появится сообщение об ошибке
  prerequisites: |
    Открыта страница регистрации 
  test-data: |
    «invalidemail.com», «invalid@emailcom», «email@.com»
  steps:
    - Вводим в поле «Email» одно из тестовых значений
    - Нажимаем Enter
  expected-result: |
    Под полем «Email» появляется сообщение «Invalid email»
    
- summary: |
    Несовпадение введенного пароля с его подтверждением
  requirement: |
    Если при регистрации значения в полях «Password»  и «Password
    Confirmation» не совпадают, то появляется сообщение «Passwords must match»
  prerequisites: |
    Открыта страница регистрации 
  test-data: |
    Данные отсутствуют
  steps:
    - Вводим в поле «Password» любое значение от 6 до 16 символов
    - Вводим в поле «Password Confirmation» любое другое значение
    - Нажимаем Enter
  expected-result: |
    Под полем «Password Confirmation» появляется сообщение «Passwords must match»
    
- summary: |
    Игра без авторизации
  requirement: |
    Пользователь может начать игру с ботом без авторизации на сайте
  prerequisites: |
    - Открыта главная страница 
    - Авторизация отсутствует
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем «TRY SIMPLE BATTLE»
  expected-result: |
    Открывается страница игры с ботом 
    
- summary: |
    Создание игры с ботом
  requirement: |
    Пользователь может сам создать игру с ботом
  prerequisites: |
    - Открыта главная страница 
    - Нажимаем зеленую кнопку «CREATE A GAME»
    - В появившемся модальном окне в строке Game Type выбираем «With a bot»
    - Нажимаем зеленую кнопку «Create battle»
  test-data: |
    Данные отсутствуют
  steps: 
    – Нажимаем «TRY SIMPLE BATTLE»
  expected-result: |
    Открывается страница игры с ботом 
     
- summary: |
    Приглашение в игру друга
  requirement: |
    Пользователь может  пригласить в  игру соперника, которого выбрал сам
  prerequisites: |
    - Пользователь авторизован
    - Открыта главная страница 
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем зеленую кнопку «CREATE A GAME»
    - В появившемся модальном окне в строке Game Type выбираем «With a friend»
    - В появившейся строке «Choose opponent» выбираем в выпадающем списке
      доступного оппонента  либо вводим nickname сами
    - Нажимаем зеленую кнопку «Create battle»
  expected-result: |
    В шапке сайта над иконкой  сражения появляется бейдж с цифрой 1
    
- summary: |
    Создание игры с любым другим пользователем
  requirement: |
    Пользователь может  создать  игру не выбирая соперника
  prerequisites: |
    - Пользователь авторизован
    - Открыта главная страница 
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем зеленую кнопку «CREATE A GAME»
    - В появившемся модальном окне в строке Game Type выбираем «With other users»
    - Нажимаем зеленую кнопку «Create battle»
  expected-result: |
    На главной странице в лобби доступных игр появляется созданная игра
    
- summary: |
    Подключение к созданной игре
  requirement: |
    Пользователь может вступить в созданную другим пользователем игру 
  prerequisites: |
    - Пользователь авторизован
    - Открыта главная страница 
  test-data: |
    Данные отсутствуют
  steps:
    - В лобби доступных игр нажимаем «Fight» напротив одной из доступных игр
  expected-result: |
    Открывается игра по заданным другим пользователем параметрам
    
- summary: |
    Принятие приглашения в игру
  requirement: |
    Пользователь может принять приглашение в игру от друга 
  prerequisites: |
    - Пользователь авторизован
    - Открыта главная страница 
    - Другой пользователь создал игру c другом, указав ваш никнейм в поле выбора соперника
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем на иконку сражения в шапке сайта
    - В всплывающем окне жмем на «Accept» напротив нужного приглашения
  expected-result: |
    Открывается игра с пригласившим пользователем 
    
- summary: |
    Выбор задачи по параметрам
  requirement: |
    В модальном окне создания игры пользователь может выбрать задачу,
    соответствующую выбранным уровню сложности и  тегам 
  prerequisites: |
    - Пользователь авторизован
    - Открыто модальное окно создания игры 
  test-data: |
    Данные отсутствуют
  steps:
    - В строке Level выбираем любой из четырех уровней сложностей
    - В строке Tags отмечаем один или несколько тегов
  expected-result: |
    В выпадающем списке Choose task отображаются соответствующие
    выбранным уровню сложности и  тегам задачи
    
- summary: |
    Выбор контрольного времени в игре
  requirement: |
    При создании игры пользователь может задать контрольное время (от 3
    до 60 мин) 
  prerequisites: |
    - Пользователь авторизован
    - Открыто модальное окно создания игры 
  test-data: |
    Данные отсутствуют
  steps:
    - В строке Time control передвигаем ползунок на желаемый показатель
    - Нажимаем зеленую кнопку «Create battle»
  expected-result: |
    В созданной игре в верхней части окна начинается обратный
    отсчет от выбранного ранее показателя
    
- summary: |
    Перевод описания  задачи
  requirement: |
    Во время игры пользователь может переключать язык описания задачи
    между русским и английским  
  prerequisites: |
    - Пользователь авторизован
    - Открыта любая игра 
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем на выпадающий список над описанием задачи
    - Нажимаем на один из двух вариантов языка
  expected-result: |
    Описание задачи переключается между русским и английским
    языками в зависимости от выбранного пункта в списке
    
- summary: |
    Выбор языка программирования
  requirement: |
    Во время игры пользователь может выбрать язык программирования на
    котором будет решать задачу
  prerequisites: |
    - Пользователь авторизован
    - Открыта любая игра 
  test-data: |
    Данные отсутствуют
  steps:
    - Нажимаем на выпадающий список над редактором задачи
    - Нажимаем на один из языков
  expected-result: |
    Язык программирования в редакторе переключается на выбранный
    
- summary: |
    Завершение игры победой
  requirement: |
    При победе в игре появляется модальное окно  c поздравлением
  prerequisites: |
    Пользователь авторизован
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");
    
    const solution = (width, length) => {
    return width * length;
    };

    module.exports = solution;
  steps:
    - Создаем игру с ботом на задаче rect_area
    - В списке языков программирования выбираем NodeJS
    - Вводим в редактор код
    - Нажимаем «Run»
  expected-result: |
    Появляется модальное окно с сообщением о победе
    
- summary: |
    Завершение игры поражением
  requirement: |
    При поражении в игре появляется модальное окно с сообщением о поражении 
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    Данные отсутствуют
  steps:
    - Создаем любую игру
    - Ждем, пока соперник не победит
  expected-result: |
    Появляется модальное окно с сообщением о поражении
    
- summary: |
    Проверка возможности сдаться в игре
  requirement: |
    Пользователь может завершить игру досрочно сдавшись противнику
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    Данные отсутствуют
  steps:
    - Создаем любую игру
    - Жмем на красный флаг «Give up» над редактором
    - В появившемся окне жмем «Give up»
  expected-result: |
    Появляется модальное окно с сообщением о поражении
    
- summary: |
    Завершение игры по истечению контрольного времени
  requirement: |
    Если оба противника не успевают решить задачу в установленное
    время,  то сражение завершается сообщением «Time is up. There are no winners
    in the game»
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    Данные отсутствуют
  steps:
    - Создаем любую игру с минимальным контрольным временем
    - Ждем окончания контрольного времени
  expected-result: |
    Справа от чата появляется сообщение «Time is up. There are no
    winners in the game»
    
- summary: |
    Решение задачи после окончания сражения
  requirement: |
    Если сражение завершилось из-за окончания контрольного времени или
    победы противника, пользователь может продолжить решение задачи
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    Данные отсутствуют    
  steps:
    - Создаем любую игру
    - Жмем на красный флаг «Give up» над редактором
    - В появившемся окне жмем «Give up»
    - Закрываем модальное окно с сообщением о поражении
    - Вводим в редактор произвольные значения
    - Нажимаем «Run»
  expected-result: |
    Во вкладке Output в верхней части экрана отображается прохождение тестов 
    
- summary: |
    Ввод неверного кода
  requirement: |
    Если  решение пользователя не проходит проверку, то во вкладке
    Output отображается сообщение «The solution cannot be executed» c описанием
    ошибок
  prerequisites: |
    - Пользователь авторизован
    - Пользователь находится в созданной игре
  test-data: |
    Данные отсутствуют
  steps:
    - Вводим произвольные значения в окно редактора
    - Жмем Run
  expected-result: |
    Во вкладке Output в верхней части экрана отображается сообщение
    «The solution cannot be executed» c описанием ошибок
    
- summary: |
    Ввод верного кода
  requirement: |
    Если решение пользователя проходит проверку, то во вкладке Output
    отображается сообщение «Yay! All tests passed!!111»
  prerequisites: |
    Пользователь авторизован 
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
    return width * length;
    };

    module.exports = solution;
  steps:
    - Создаем игру с ботом на задаче rect_area
    - В списке языков программирования выбираем NodeJS
    - Вводим в редактор код
    - Нажимаем «Run»
  expected-result: |
    Во вкладке Output в верхней части экрана отображается
    прохождение тестов с сообщением «Yay! All tests passed!!111»

- summary: |
    Смена никнейма в настройках профиля
  requirement: |
    Пользователь может сменить никнейм в настройках своего профиля
  prerequisites: |
    - Пользователь авторизован
    - Открыта страница Settings профиля
  test-data: |
    Данные отсутствуют    
  steps:
    - В поле Enter your name вводим новый никнейм
    - Нажимаем Save
    - Обновляем страницу
  expected-result: |
    В шапке сайта справа отображается новый никнейм авторизованного пользователя

- summary: |
    Привязка аккаунта Github/Discord к профилю
  requirement: >
    Пользователь может привязать к профилю на сайте имеющийся у него
    аккаунт в Github/Discord 
  prerequisites: |
    - Пользователь зарегистрирован на сайте через электронную почту
    - Пользователь авторизован на сайте
    - Пользователь зарегистрирован в Github/Discord
    - Открыта страница Settings профиля
  test-data: |
    Данные отсутствуют    
  steps:
    - В разделе Socials нажимаем   Link Github/Discord
  expected-result: |
    Аккаунт Github/Discord привязывается к профилю

- summary: |
    Удаление привязки аккаунта Github/Discord к профилю
  requirement: |
    Пользователь может отвязать от своего профиля аккаунт Github/Discord
  prerequisites: |
    - Пользователь зарегистрирован на сайте через электронную почту
    - Пользователь авторизован на сайте
    - К профилю привязан аккаунт Github/Discord
    - Открыта страница Settings профиля
  test-data: |
    Данные отсутствуют    
  steps:
    - В разделе Socials нажимаем Нажимаем  Unlink Github/Discord
  expected-result: |
    Аккаунт Github/Discord отвязывается от профиля    
